name: resuable workflow
on: 
    workflow_call:

jobs:
    reuse_deploy:
        environment: 
            name: development
            url: ${{ steps.set-app-url.outputs.APP_URL }}

        outputs: 
            app_url: ${{ steps.set-app-url.outputs.APP_URL }}

        permissions:
            id-token: write
            contents: read

        name: Deploy to Development Environment
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: install kubectl cli
              uses: azure/setup-kubectl@v1
              with:
                version: 'latest'
            

            - uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            

            - uses: azure/aks-set-context@v4
              with:
                resource-group: 'CICD_testing_group'
                cluster-name: 'CICD_testing'
            - name: fetch kubernetes cluster details
              run: |
                kubectl version
                echo ----------------------------
                kubectl get nodes
            - name: saving ingress ip to env variable
              run: |
                echo "saving ingress ip to env variable"
                export INGRESS_IP=$(kubectl get service ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
                echo "INGRESS_IP=${INGRESS_IP}" >> $GITHUB_ENV

            - name: replace tokens in deployment.yaml
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '_{_'
                tokenSuffix: '_}_'
                files: '["kubernetes/development/*.yaml"]'
              env:
                NAMESPACE: ${{ vars.NAMESPACE }}
                REPLICAS: ${{ vars.REPLICAS }}
                IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                INGRESS_IP: ${{ env.INGRESS_IP }}
            
            - name: check token replacement
              run: |
                echo "checking token replacement"
                cat kubernetes/development/*.yaml

            - name: create mongo secret
              run: |
                echo "creating mongo secret"
                kubectl create secret generic mongo-db-creds \
                --from-literal=MONGO_URI=${{env.MONGO_URI}} \
                --from-literal=MONGO_USERNAME=${{vars.MONGO_USERNAME}} \
                --from-literal=MONGO_PASSWORD=${{secrets.MONGO_PASSWORD}} \
                -n ${{ vars.NAMESPACE }} \
                --save-config \
                --dry-run=client \
                -o yaml | kubectl apply -f -
                

            - name: deploy to dev environment
              run: |
                echo "deploying to dev environment"
                kubectl apply -f kubernetes/development 
            
            - name: set app ingress host url 
              id: set-app-url
              run: |
                echo "setting app ingress host url"
                export APP_URL=$(kubectl get ingress -n ${{ vars.NAMESPACE }} -o jsonpath='{.items[0].spec.tls[0].hosts[0]}')
                echo $APP_URL
                echo "APP_URL=${APP_URL}" >> $GITHUB_ENV
